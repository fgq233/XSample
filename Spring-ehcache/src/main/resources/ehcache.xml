<?xml version="1.0" encoding="UTF-8"?>
<ehcache>
    <diskStore path="java.io.tmpdir"/>

    <defaultCache
            maxElementsInMemory="10000"
            eternal="false"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            maxElementsOnDisk="10000000"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy="LRU">
        <persistence strategy="localTempSwap"/>
    </defaultCache>

    <cache
            name="myCache"
            eternal="false"
            timeToIdleSeconds="120"
            timeToLiveSeconds="300"
            maxEntriesLocalHeap="10000"
            maxEntriesLocalDisk="10000000"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy="LRU">
        <persistence strategy="localTempSwap"/>
    </cache>
</ehcache>

        <!--
          maxElementsInMemory="10000"     缓存在内存中最大个数
          eternal="false"      缓存中对象是否永久有效
          timeToIdleSeconds="120"  最大空闲时间：仅当eternal=false对象不是永久有效时使用，空闲120s缓存会被清理
          timeToLiveSeconds="120"  存活时间：缓存最大存活时间
          overflowToDisk="true"     内存不足时，是否启用磁盘缓存，对应：diskStore
          maxElementsOnDisk="10000000"  磁盘缓存数据最大是多少
          diskPersistent="false"    重启服务器缓存是否继续生效
          diskExpiryThreadIntervalSeconds="120"     启动线程每隔多长时间清理缓存
          memoryStoreEvictionPolicy="LRU"       淘汰策略：LRU 最近最少使用会被优先淘汰、清理掉
        -->