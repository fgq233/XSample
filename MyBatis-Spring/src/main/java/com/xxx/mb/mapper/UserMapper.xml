<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxx.mb.mapper.UserMapper">
    <!--
        遵循4个原则
            命名空间 == 接口完整路径名
            id  == 接口方法名
            parameterType ==  接口方法的形参类型：基本类型、Model、包装类
            resultType  ==  接口方法的返回值类型：基本类型、Model、包装类、resultMap
    -->

    <!--  增  -->
    <insert id="insertUser" parameterType="com.xxx.mb.model.User">
        /*   selectKey  在插入之后----查询主键，然后塞进属性中   */
        <selectKey keyProperty="uid" resultType="Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into `user` (username,password) values (#{username},#{password})
    </insert>

    <!-- 删   -->
    <delete id="deleteUseById" parameterType="Integer">
        delete from `user` where uid = #{id}
    </delete>

    <!-- 改   -->
    <update id="updateuser" parameterType="com.xxx.mb.model.User">
        update user set username = #{username} where uid = #{uid}
    </update>

    <!--  SQL片段，提取公共部分  -->
    <sql id="mySQL">
        select * from `user`
    </sql>




    <!-- 查1：返回User对象   -->
    <select id="findUserById" parameterType="Integer" resultType="com.xxx.mb.model.User">
        <include refid="mySQL"/>
        where uid = #{id}
    </select>

    <!-- 查2：聚合函数   -->
    <select id="findUserCount" resultType="Integer">
        select count(*) FROM `user`
    </select>

    <!-- 查3：返回List<User>   此时的resultType返回集合的泛型User -->
    <!-- #{} 占位符      ${} 字符串拼接   -->
    <select id="findUserLikeName" parameterType="String" resultType="com.xxx.mb.model.User">
        <include refid="mySQL"/>
        /*where username like '%${name}%'   可能会出现SQL注入问题 */
          where username like "%"#{name}"%"
    </select>


    <!--
        一对多查询，使用collection映射另外一张表要查询的字段
    -->
    <select id="queryUserOrders" resultMap="oneToMore">
        select u.uid,u.username,u.password,
              o.oid,o.time,o.uid_fk
              from `user` u,`order` o
        where u.uid = o.uid_fk
    </select>


    <resultMap id="oneToMore" type="com.xxx.mb.model.User">
        <id column="uid" property="uid"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>

        <collection property="orders" ofType="com.xxx.mb.model.Order">
            <id column="oid" property="oid"/>
            <result column="time" property="time"/>
            <result column="uid_fk" property="uidFk"/>
        </collection>
    </resultMap>

</mapper>